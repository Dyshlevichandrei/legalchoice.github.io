!function(h,N){function t(e,t){return t.toUpperCase()}function r(e){!g.addEventListener&&"load"!==e.type&&"complete"!==g.readyState||(H(),ye.ready())}var i,n,y=typeof N,g=h.document,e=h.location,o=h.jQuery,a=h.$,s={},f=[],u="1.9.1",v=f.concat,l=f.push,c=f.slice,p=f.indexOf,d=s.toString,m=s.hasOwnProperty,b=u.trim,ye=function(e,t){return new ye.fn.init(e,t,n)},x=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,C=/\S+/g,T=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,w=/^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/,k=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,E=/^[\],:{}\s]*$/,S=/(?:^|:|,)(?:\s*\[)+/g,A=/\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,j=/"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g,D=/^-ms-/,L=/-([\da-z])/gi,H=function(){g.addEventListener?(g.removeEventListener("DOMContentLoaded",r,!1),h.removeEventListener("load",r,!1)):(g.detachEvent("onreadystatechange",r),h.detachEvent("onload",r))};function q(e){var t=e.length,n=ye.type(e);return!ye.isWindow(e)&&(!(1!==e.nodeType||!t)||("array"===n||"function"!==n&&(0===t||"number"==typeof t&&0<t&&t-1 in e)))}ye.fn=ye.prototype={jquery:u,constructor:ye,init:function(e,t,n){var r,i;if(!e)return this;if("string"!=typeof e)return e.nodeType?(this.context=this[0]=e,this.length=1,this):ye.isFunction(e)?n.ready(e):(e.selector!==N&&(this.selector=e.selector,this.context=e.context),ye.makeArray(e,this));if(!(r="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&3<=e.length?[null,e,null]:w.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof ye?t[0]:t,ye.merge(this,ye.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:g,!0)),k.test(r[1])&&ye.isPlainObject(t))for(r in t)ye.isFunction(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}if((i=g.getElementById(r[2]))&&i.parentNode){if(i.id!==r[2])return n.find(e);this.length=1,this[0]=i}return this.context=g,this.selector=e,this},selector:"",length:0,size:function(){return this.length},toArray:function(){return c.call(this)},get:function(e){return null==e?this.toArray():e<0?this[this.length+e]:this[e]},pushStack:function(e){var t=ye.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return ye.each(this,e,t)},ready:function(e){return ye.ready.promise().done(e),this},slice:function(){return this.pushStack(c.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},map:function(n){return this.pushStack(ye.map(this,function(e,t){return n.call(e,t,e)}))},end:function(){return this.prevObject||this.constructor(null)},push:l,sort:[].sort,splice:[].splice},ye.fn.init.prototype=ye.fn,ye.extend=ye.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[1]||{},s=2),"object"==typeof a||ye.isFunction(a)||(a={}),u===s&&(a=this,--s);s<u;s++)if(null!=(i=arguments[s]))for(r in i)e=a[r],a!==(n=i[r])&&(l&&n&&(ye.isPlainObject(n)||(t=ye.isArray(n)))?(o=t?(t=!1,e&&ye.isArray(e)?e:[]):e&&ye.isPlainObject(e)?e:{},a[r]=ye.extend(l,o,n)):n!==N&&(a[r]=n));return a},ye.extend({noConflict:function(e){return h.$===ye&&(h.$=a),e&&h.jQuery===ye&&(h.jQuery=o),ye},isReady:!1,readyWait:1,holdReady:function(e){e?ye.readyWait++:ye.ready(!0)},ready:function(e){if(!0===e?!--ye.readyWait:!ye.isReady){if(!g.body)return setTimeout(ye.ready);(ye.isReady=!0)!==e&&0<--ye.readyWait||(i.resolveWith(g,[ye]),ye.fn.trigger&&ye(g).trigger("ready").off("ready"))}},isFunction:function(e){return"function"===ye.type(e)},isArray:Array.isArray||function(e){return"array"===ye.type(e)},isWindow:function(e){return null!=e&&e==e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?s[d.call(e)]||"object":typeof e},isPlainObject:function(e){if(!e||"object"!==ye.type(e)||e.nodeType||ye.isWindow(e))return!1;try{if(e.constructor&&!m.call(e,"constructor")&&!m.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(e){return!1}var t;for(t in e);return t===N||m.call(e,t)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||g;var r=k.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=ye.buildFragment([e],t,i),i&&ye(i).remove(),ye.merge([],r.childNodes))},parseJSON:function(e){return h.JSON&&h.JSON.parse?h.JSON.parse(e):null===e?e:"string"==typeof e&&((e=ye.trim(e))&&E.test(e.replace(A,"@").replace(j,"]").replace(S,"")))?Function("return "+e)():(ye.error("Invalid JSON: "+e),N)},parseXML:function(e){var t;if(!e||"string"!=typeof e)return null;try{h.DOMParser?t=(new DOMParser).parseFromString(e,"text/xml"):((t=new ActiveXObject("Microsoft.XMLDOM")).async="false",t.loadXML(e))}catch(e){t=N}return t&&t.documentElement&&!t.getElementsByTagName("parsererror").length||ye.error("Invalid XML: "+e),t},noop:function(){},globalEval:function(e){e&&ye.trim(e)&&(h.execScript||function(e){h.eval.call(h,e)})(e)},camelCase:function(e){return e.replace(D,"ms-").replace(L,t)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,n){var r=0,i=e.length,o=q(e);if(n){if(o)for(;r<i&&!1!==t.apply(e[r],n);r++);else for(r in e)if(!1===t.apply(e[r],n))break}else if(o)for(;r<i&&!1!==t.call(e[r],r,e[r]);r++);else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:b&&!b.call("\ufeffÂ ")?function(e){return null==e?"":b.call(e)}:function(e){return null==e?"":(e+"").replace(T,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(q(Object(e))?ye.merge(n,"string"==typeof e?[e]:e):l.call(n,e)),n},inArray:function(e,t,n){var r;if(t){if(p)return p.call(t,e,n);for(r=t.length,n=n?n<0?Math.max(0,r+n):n:0;n<r;n++)if(n in t&&t[n]===e)return n}return-1},merge:function(e,t){var n=t.length,r=e.length,i=0;if("number"==typeof n)for(;i<n;i++)e[r++]=t[i];else for(;t[i]!==N;)e[r++]=t[i++];return e.length=r,e},grep:function(e,t,n){var r=[],i=0,o=e.length;for(n=!!n;i<o;i++)n!==!!t(e[i],i)&&r.push(e[i]);return r},map:function(e,t,n){var r,i=0,o=e.length,a=[];if(q(e))for(;i<o;i++)null!=(r=t(e[i],i,n))&&(a[a.length]=r);else for(i in e)null!=(r=t(e[i],i,n))&&(a[a.length]=r);return v.apply([],a)},guid:1,proxy:function(e,t){var n,r,i;return"string"==typeof t&&(i=e[t],t=e,e=i),ye.isFunction(e)?(n=c.call(arguments,2),(r=function(){return e.apply(t||this,n.concat(c.call(arguments)))}).guid=e.guid=e.guid||ye.guid++,r):N},access:function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===ye.type(n))for(s in i=!0,n)ye.access(e,t,s,n[s],!0,o,a);else if(r!==N&&(i=!0,ye.isFunction(r)||(a=!0),l&&(t=a?(t.call(e,r),null):(l=t,function(e,t,n){return l.call(ye(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},now:function(){return(new Date).getTime()}}),ye.ready.promise=function(e){if(!i)if(i=ye.Deferred(),"complete"===g.readyState)setTimeout(ye.ready);else if(g.addEventListener)g.addEventListener("DOMContentLoaded",r,!1),h.addEventListener("load",r,!1);else{g.attachEvent("onreadystatechange",r),h.attachEvent("onload",r);var n=!1;try{n=null==h.frameElement&&g.documentElement}catch(e){}n&&n.doScroll&&function t(){if(!ye.isReady){try{n.doScroll("left")}catch(e){return setTimeout(t,50)}H(),ye.ready()}}()}return i.promise(e)},ye.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){s["[object "+t+"]"]=t.toLowerCase()}),n=ye(g);var M={};ye.Callbacks=function(i){var e,n;i="string"==typeof i?M[i]||(n=M[e=i]={},ye.each(e.match(C)||[],function(e,t){n[t]=!0}),n):ye.extend({},i);var r,t,o,a,s,u,l=[],c=!i.once&&[],f=function(e){for(t=i.memory&&e,o=!0,s=u||0,u=0,a=l.length,r=!0;l&&s<a;s++)if(!1===l[s].apply(e[0],e[1])&&i.stopOnFalse){t=!1;break}r=!1,l&&(c?c.length&&f(c.shift()):t?l=[]:p.disable())},p={add:function(){if(l){var e=l.length;(function r(e){ye.each(e,function(e,t){var n=ye.type(t);"function"===n?i.unique&&p.has(t)||l.push(t):t&&t.length&&"string"!==n&&r(t)})})(arguments),r?a=l.length:t&&(u=e,f(t))}return this},remove:function(){return l&&ye.each(arguments,function(e,t){for(var n;-1<(n=ye.inArray(t,l,n));)l.splice(n,1),r&&(n<=a&&a--,n<=s&&s--)}),this},has:function(e){return e?-1<ye.inArray(e,l):!(!l||!l.length)},empty:function(){return l=[],this},disable:function(){return l=c=t=N,this},disabled:function(){return!l},lock:function(){return c=N,t||p.disable(),this},locked:function(){return!c},fireWith:function(e,t){return t=[e,(t=t||[]).slice?t.slice():t],!l||o&&!c||(r?c.push(t):f(t)),this},fire:function(){return p.fireWith(this,arguments),this},fired:function(){return!!o}};return p},ye.extend({Deferred:function(e){var a=[["resolve","done",ye.Callbacks("once memory"),"resolved"],["reject","fail",ye.Callbacks("once memory"),"rejected"],["notify","progress",ye.Callbacks("memory")]],i="pending",s={state:function(){return i},always:function(){return u.done(arguments).fail(arguments),this},then:function(){var o=arguments;return ye.Deferred(function(i){ye.each(a,function(e,t){var n=t[0],r=ye.isFunction(o[e])&&o[e];u[t[1]](function(){var e=r&&r.apply(this,arguments);e&&ye.isFunction(e.promise)?e.promise().done(i.resolve).fail(i.reject).progress(i.notify):i[n+"With"](this===s?i.promise():this,r?[e]:arguments)})}),o=null}).promise()},promise:function(e){return null!=e?ye.extend(e,s):s}},u={};return s.pipe=s.then,ye.each(a,function(e,t){var n=t[2],r=t[3];s[t[1]]=n.add,r&&n.add(function(){i=r},a[1^e][2].disable,a[2][2].lock),u[t[0]]=function(){return u[t[0]+"With"](this===u?s:this,arguments),this},u[t[0]+"With"]=n.fireWith}),s.promise(u),e&&e.call(u,u),u},when:function(e){function t(t,n,r){return function(e){n[t]=this,r[t]=1<arguments.length?c.call(arguments):e,r===i?l.notifyWith(n,r):--u||l.resolveWith(n,r)}}var i,n,r,o=0,a=c.call(arguments),s=a.length,u=1!==s||e&&ye.isFunction(e.promise)?s:0,l=1===u?e:ye.Deferred();if(1<s)for(i=Array(s),n=Array(s),r=Array(s);o<s;o++)a[o]&&ye.isFunction(a[o].promise)?a[o].promise().done(t(o,r,a)).fail(l.reject).progress(t(o,n,i)):--u;return u||l.resolveWith(r,a),l.promise()}}),ye.support=function(){var o,e,t,n,r,i,a,s,u,l,c=g.createElement("div");if(c.setAttribute("className","t"),c.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",e=c.getElementsByTagName("*"),t=c.getElementsByTagName("a")[0],!e||!t||!e.length)return{};a=(r=g.createElement("select")).appendChild(g.createElement("option")),n=c.getElementsByTagName("input")[0],t.style.cssText="top:1px;float:left;opacity:.5",o={getSetAttribute:"t"!==c.className,leadingWhitespace:3===c.firstChild.nodeType,tbody:!c.getElementsByTagName("tbody").length,htmlSerialize:!!c.getElementsByTagName("link").length,style:/top/.test(t.getAttribute("style")),hrefNormalized:"/a"===t.getAttribute("href"),opacity:/^0.5/.test(t.style.opacity),cssFloat:!!t.style.cssFloat,checkOn:!!n.value,optSelected:a.selected,enctype:!!g.createElement("form").enctype,html5Clone:"<:nav></:nav>"!==g.createElement("nav").cloneNode(!0).outerHTML,boxModel:"CSS1Compat"===g.compatMode,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0,boxSizingReliable:!0,pixelPosition:!1},n.checked=!0,o.noCloneChecked=n.cloneNode(!0).checked,r.disabled=!0,o.optDisabled=!a.disabled;try{delete c.test}catch(e){o.deleteExpando=!1}for(l in(n=g.createElement("input")).setAttribute("value",""),o.input=""===n.getAttribute("value"),n.value="t",n.setAttribute("type","radio"),o.radioValue="t"===n.value,n.setAttribute("checked","t"),n.setAttribute("name","t"),(i=g.createDocumentFragment()).appendChild(n),o.appendChecked=n.checked,o.checkClone=i.cloneNode(!0).cloneNode(!0).lastChild.checked,c.attachEvent&&(c.attachEvent("onclick",function(){o.noCloneEvent=!1}),c.cloneNode(!0).click()),{submit:!0,change:!0,focusin:!0})c.setAttribute(s="on"+l,"t"),o[l+"Bubbles"]=s in h||!1===c.attributes[s].expando;return c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",o.clearCloneStyle="content-box"===c.style.backgroundClip,ye(function(){var e,t,n,r="padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",i=g.getElementsByTagName("body")[0];i&&((e=g.createElement("div")).style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",i.appendChild(e).appendChild(c),c.innerHTML="<table><tr><td></td><td>t</td></tr></table>",(n=c.getElementsByTagName("td"))[0].style.cssText="padding:0;margin:0;border:0;display:none",u=0===n[0].offsetHeight,n[0].style.display="",n[1].style.display="none",o.reliableHiddenOffsets=u&&0===n[0].offsetHeight,c.innerHTML="",c.style.cssText="box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",o.boxSizing=4===c.offsetWidth,o.doesNotIncludeMarginInBodyOffset=1!==i.offsetTop,h.getComputedStyle&&(o.pixelPosition="1%"!==(h.getComputedStyle(c,null)||{}).top,o.boxSizingReliable="4px"===(h.getComputedStyle(c,null)||{width:"4px"}).width,(t=c.appendChild(g.createElement("div"))).style.cssText=c.style.cssText=r,t.style.marginRight=t.style.width="0",c.style.width="1px",o.reliableMarginRight=!parseFloat((h.getComputedStyle(t,null)||{}).marginRight)),typeof c.style.zoom!==y&&(c.innerHTML="",c.style.cssText=r+"width:1px;padding:1px;display:inline;zoom:1",o.inlineBlockNeedsLayout=3===c.offsetWidth,c.style.display="block",c.innerHTML="<div></div>",c.firstChild.style.width="5px",o.shrinkWrapBlocks=3!==c.offsetWidth,o.inlineBlockNeedsLayout&&(i.style.zoom=1)),i.removeChild(e),e=c=n=t=null)}),e=r=i=a=t=n=null,o}();var _=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,F=/([A-Z])/g;function O(e,t,n,r){if(ye.acceptData(e)){var i,o,a=ye.expando,s="string"==typeof t,u=e.nodeType,l=u?ye.cache:e,c=u?e[a]:e[a]&&a;if(c&&l[c]&&(r||l[c].data)||!s||n!==N)return c||(u?e[a]=c=f.pop()||ye.guid++:c=a),l[c]||(l[c]={},u||(l[c].toJSON=ye.noop)),"object"!=typeof t&&"function"!=typeof t||(r?l[c]=ye.extend(l[c],t):l[c].data=ye.extend(l[c].data,t)),i=l[c],r||(i.data||(i.data={}),i=i.data),n!==N&&(i[ye.camelCase(t)]=n),s?null==(o=i[t])&&(o=i[ye.camelCase(t)]):o=i,o}}function B(e,t,n){if(ye.acceptData(e)){var r,i,o,a=e.nodeType,s=a?ye.cache:e,u=a?e[ye.expando]:ye.expando;if(s[u]){if(t&&(o=n?s[u]:s[u].data)){for((r=0,i=(t=ye.isArray(t)?t.concat(ye.map(t,ye.camelCase)):t in o?[t]:(t=ye.camelCase(t))in o?[t]:t.split(" ")).length);r<i;r++)delete o[t[r]];if(!(n?R:ye.isEmptyObject)(o))return}(n||(delete s[u].data,R(s[u])))&&(a?ye.cleanData([e],!0):ye.support.deleteExpando||s!=s.window?delete s[u]:s[u]=null)}}}function P(e,t,n){if(n===N&&1===e.nodeType){var r="data-"+t.replace(F,"-$1").toLowerCase();if("string"==typeof(n=e.getAttribute(r))){try{n="true"===n||"false"!==n&&("null"===n?null:+n+""===n?+n:_.test(n)?ye.parseJSON(n):n)}catch(e){}ye.data(e,t,n)}else n=N}return n}function R(e){var t;for(t in e)if(("data"!==t||!ye.isEmptyObject(e[t]))&&"toJSON"!==t)return!1;return!0}ye.extend({cache:{},expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(e){return!!(e=e.nodeType?ye.cache[e[ye.expando]]:e[ye.expando])&&!R(e)},data:function(e,t,n){return O(e,t,n)},removeData:function(e,t){return B(e,t)},_data:function(e,t,n){return O(e,t,n,!0)},_removeData:function(e,t){return B(e,t,!0)},acceptData:function(e){if(e.nodeType&&1!==e.nodeType&&9!==e.nodeType)return!1;var t=e.nodeName&&ye.noData[e.nodeName.toLowerCase()];return!t||!0!==t&&e.getAttribute("classid")===t}}),ye.fn.extend({data:function(t,e){var n,r,i=this[0],o=0,a=null;if(t!==N)return"object"==typeof t?this.each(function(){ye.data(this,t)}):ye.access(this,function(e){return e===N?i?P(i,t,ye.data(i,t)):null:(this.each(function(){ye.data(this,t,e)}),N)},null,e,1<arguments.length,null,!0);if(this.length&&(a=ye.data(i),1===i.nodeType&&!ye._data(i,"parsedAttrs"))){for(n=i.attributes;n.length>o;o++)(r=n[o].name).indexOf("data-")||(r=ye.camelCase(r.slice(5)),P(i,r,a[r]));ye._data(i,"parsedAttrs",!0)}return a},removeData:function(e){return this.each(function(){ye.removeData(this,e)})}}),ye.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=ye._data(e,t),n&&(!r||ye.isArray(n)?r=ye._data(e,t,ye.makeArray(n)):r.push(n)),r||[]):N},dequeue:function(e,t){t=t||"fx";var n=ye.queue(e,t),r=n.length,i=n.shift(),o=ye._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),(o.cur=i)&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){ye.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ye._data(e,n)||ye._data(e,n,{empty:ye.Callbacks("once memory").add(function(){ye._removeData(e,t+"queue"),ye._removeData(e,n)})})}}),ye.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?ye.queue(this[0],t):n===N?this:this.each(function(){var e=ye.queue(this,t,n);ye._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&ye.dequeue(this,t)})},dequeue:function(e){return this.each(function(){ye.dequeue(this,e)})},delay:function(r,e){return r=ye.fx&&ye.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=setTimeout(e,r);t.stop=function(){clearTimeout(n)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--i||o.resolveWith(a,[a])}var r,i=1,o=ye.Deferred(),a=this,s=this.length;for("string"!=typeof e&&(t=e,e=N),e=e||"fx";s--;)(r=ye._data(a[s],e+"queueHooks"))&&r.empty&&(i++,r.empty.add(n));return n(),o.promise(t)}});var W,$,I=/[\t\r\n]/g,z=/\r/g,X=/^(?:input|select|textarea|button|object)$/i,U=/^(?:a|area)$/i,V=/^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i,Y=/^(?:checked|selected)$/i,J=ye.support.getSetAttribute,G=ye.support.input;ye.fn.extend({attr:function(e,t){return ye.access(this,ye.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){ye.removeAttr(this,e)})},prop:function(e,t){return ye.access(this,ye.prop,e,t,1<arguments.length)},removeProp:function(e){return e=ye.propFix[e]||e,this.each(function(){try{this[e]=N,delete this[e]}catch(e){}})},addClass:function(t){var e,n,r,i,o,a=0,s=this.length,u="string"==typeof t&&t;if(ye.isFunction(t))return this.each(function(e){ye(this).addClass(t.call(this,e,this.className))});if(u)for(e=(t||"").match(C)||[];a<s;a++)if(r=1===(n=this[a]).nodeType&&(n.className?(" "+n.className+" ").replace(I," "):" ")){for(o=0;i=e[o++];)r.indexOf(" "+i+" ")<0&&(r+=i+" ");n.className=ye.trim(r)}return this},removeClass:function(t){var e,n,r,i,o,a=0,s=this.length,u=0===arguments.length||"string"==typeof t&&t;if(ye.isFunction(t))return this.each(function(e){ye(this).removeClass(t.call(this,e,this.className))});if(u)for(e=(t||"").match(C)||[];a<s;a++)if(r=1===(n=this[a]).nodeType&&(n.className?(" "+n.className+" ").replace(I," "):"")){for(o=0;i=e[o++];)for(;0<=r.indexOf(" "+i+" ");)r=r.replace(" "+i+" "," ");n.className=t?ye.trim(r):""}return this},toggleClass:function(o,a){var s=typeof o,u="boolean"==typeof a;return ye.isFunction(o)?this.each(function(e){ye(this).toggleClass(o.call(this,e,this.className,a),a)}):this.each(function(){if("string"==s)for(var e,t=0,n=ye(this),r=a,i=o.match(C)||[];e=i[t++];)r=u?r:!n.hasClass(e),n[r?"addClass":"removeClass"](e);else s!==y&&"boolean"!=s||(this.className&&ye._data(this,"__className__",this.className),this.className=this.className||!1===o?"":ye._data(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,r=this.length;n<r;n++)if(1===this[n].nodeType&&0<=(" "+this[n].className+" ").replace(I," ").indexOf(t))return!0;return!1},val:function(r){var e,i,o,t=this[0];return arguments.length?(o=ye.isFunction(r),this.each(function(e){var t,n=ye(this);1===this.nodeType&&(null==(t=o?r.call(this,e,n.val()):r)?t="":"number"==typeof t?t+="":ye.isArray(t)&&(t=ye.map(t,function(e){return null==e?"":e+""})),(i=ye.valHooks[this.type]||ye.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&i.set(this,t,"value")!==N||(this.value=t))})):t?(i=ye.valHooks[t.type]||ye.valHooks[t.nodeName.toLowerCase()])&&"get"in i&&(e=i.get(t,"value"))!==N?e:"string"==typeof(e=t.value)?e.replace(z,""):null==e?"":e:void 0}}),ye.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){for(var t,n,r=e.options,i=e.selectedIndex,o="select-one"===e.type||i<0,a=o?null:[],s=o?i+1:r.length,u=i<0?s:o?i:0;u<s;u++)if(!(!(n=r[u]).selected&&u!==i||(ye.support.optDisabled?n.disabled:null!==n.getAttribute("disabled"))||n.parentNode.disabled&&ye.nodeName(n.parentNode,"optgroup"))){if(t=ye(n).val(),o)return t;a.push(t)}return a},set:function(e,t){var n=ye.makeArray(t);return ye(e).find("option").each(function(){this.selected=0<=ye.inArray(ye(this).val(),n)}),n.length||(e.selectedIndex=-1),n}}},attr:function(e,t,n){var r,i,o,a=e.nodeType;if(e&&3!==a&&8!==a&&2!==a)return typeof e.getAttribute===y?ye.prop(e,t,n):((i=1!==a||!ye.isXMLDoc(e))&&(t=t.toLowerCase(),r=ye.attrHooks[t]||(V.test(t)?$:W)),n===N?r&&i&&"get"in r&&null!==(o=r.get(e,t))?o:(typeof e.getAttribute!==y&&(o=e.getAttribute(t)),null==o?N:o):null!==n?r&&i&&"set"in r&&(o=r.set(e,n,t))!==N?o:(e.setAttribute(t,n+""),n):(ye.removeAttr(e,t),N))},removeAttr:function(e,t){var n,r,i=0,o=t&&t.match(C);if(o&&1===e.nodeType)for(;n=o[i++];)r=ye.propFix[n]||n,V.test(n)?!J&&Y.test(n)?e[ye.camelCase("default-"+n)]=e[r]=!1:e[r]=!1:ye.attr(e,n,""),e.removeAttribute(J?n:r)},attrHooks:{type:{set:function(e,t){if(!ye.support.radioValue&&"radio"===t&&ye.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},propFix:{tabindex:"tabIndex",readonly:"readOnly",for:"htmlFor",class:"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(e,t,n){var r,i,o=e.nodeType;if(e&&3!==o&&8!==o&&2!==o)return(1!==o||!ye.isXMLDoc(e))&&(t=ye.propFix[t]||t,i=ye.propHooks[t]),n!==N?i&&"set"in i&&(r=i.set(e,n,t))!==N?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=e.getAttributeNode("tabindex");return t&&t.specified?parseInt(t.value,10):X.test(e.nodeName)||U.test(e.nodeName)&&e.href?0:N}}}}),$={get:function(e,t){var n=ye.prop(e,t),r="boolean"==typeof n&&e.getAttribute(t),i="boolean"==typeof n?G&&J?null!=r:Y.test(t)?e[ye.camelCase("default-"+t)]:!!r:e.getAttributeNode(t);return i&&!1!==i.value?t.toLowerCase():N},set:function(e,t,n){return!1===t?ye.removeAttr(e,n):G&&J||!Y.test(n)?e.setAttribute(!J&&ye.propFix[n]||n,n):e[ye.camelCase("default-"+n)]=e[n]=!0,n}},G&&J||(ye.attrHooks.value={get:function(e,t){var n=e.getAttributeNode(t);return ye.nodeName(e,"input")?e.defaultValue:n&&n.specified?n.value:N},set:function(e,t,n){return ye.nodeName(e,"input")?(e.defaultValue=t,N):W&&W.set(e,t,n)}}),J||(W=ye.valHooks.button={get:function(e,t){var n=e.getAttributeNode(t);return n&&("id"===t||"name"===t||"coords"===t?""!==n.value:n.specified)?n.value:N},set:function(e,t,n){var r=e.getAttributeNode(n);return r||e.setAttributeNode(r=e.ownerDocument.createAttribute(n)),r.value=t+="","value"===n||t===e.getAttribute(n)?t:N}},ye.attrHooks.contenteditable={get:W.get,set:function(e,t,n){W.set(e,""!==t&&t,n)}},ye.each(["width","height"],function(e,n){ye.attrHooks[n]=ye.extend(ye.attrHooks[n],{set:function(e,t){return""===t?(e.setAttribute(n,"auto"),t):N}})})),ye.support.hrefNormalized||(ye.each(["href","src","width","height"],function(e,n){ye.attrHooks[n]=ye.extend(ye.attrHooks[n],{get:function(e){var t=e.getAttribute(n,2);return null==t?N:t}})}),ye.each(["href","src"],function(e,t){ye.propHooks[t]={get:function(e){return e.getAttribute(t,4)}}})),ye.support.style||(ye.attrHooks.style={get:function(e){return e.style.cssText||N},set:function(e,t){return e.style.cssText=t+""}}),ye.support.optSelected||(ye.propHooks.selected=ye.extend(ye.propHooks.selected,{get:function(e){var t=e.parentNode;return t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex),null}})),ye.support.enctype||(ye.propFix.enctype="encoding"),ye.support.checkOn||ye.each(["radio","checkbox"],function(){ye.valHooks[this]={get:function(e){return null===e.getAttribute("value")?"on":e.value}}}),ye.each(["radio","checkbox"],function(){ye.valHooks[this]=ye.extend(ye.valHooks[this],{set:function(e,t){return ye.isArray(t)?e.checked=0<=ye.inArray(ye(e).val(),t):N}})});var Q=/^(?:input|select|textarea)$/i,K=/^key/,Z=/^(?:mouse|contextmenu)|click/,ee=/^(?:focusinfocus|focusoutblur)$/,te=/^([^.]*)(?:\.(.+)|)$/;function ne(){return!0}function re(){return!1}ye.event={global:{},add:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,m=ye._data(e);if(m){for(n.handler&&(n=(u=n).handler,i=u.selector),n.guid||(n.guid=ye.guid++),(a=m.events)||(a=m.events={}),(c=m.handle)||((c=m.handle=function(e){return typeof ye===y||e&&ye.event.triggered===e.type?N:ye.event.dispatch.apply(c.elem,arguments)}).elem=e),s=(t=(t||"").match(C)||[""]).length;s--;)d=g=(o=te.exec(t[s])||[])[1],h=(o[2]||"").split(".").sort(),l=ye.event.special[d]||{},d=(i?l.delegateType:l.bindType)||d,l=ye.event.special[d]||{},f=ye.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&ye.expr.match.needsContext.test(i),namespace:h.join(".")},u),(p=a[d])||((p=a[d]=[]).delegateCount=0,l.setup&&!1!==l.setup.call(e,r,h,c)||(e.addEventListener?e.addEventListener(d,c,!1):e.attachEvent&&e.attachEvent("on"+d,c))),l.add&&(l.add.call(e,f),f.handler.guid||(f.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,f):p.push(f),ye.event.global[d]=!0;e=null}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,m=ye.hasData(e)&&ye._data(e);if(m&&(c=m.events)){for(l=(t=(t||"").match(C)||[""]).length;l--;)if(d=g=(s=te.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){for(f=ye.event.special[d]||{},p=c[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),u=o=p.length;o--;)a=p[o],!i&&g!==a.origType||n&&n.guid!==a.guid||s&&!s.test(a.namespace)||r&&r!==a.selector&&("**"!==r||!a.selector)||(p.splice(o,1),a.selector&&p.delegateCount--,f.remove&&f.remove.call(e,a));u&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,m.handle)||ye.removeEvent(e,d,m.handle),delete c[d])}else for(d in c)ye.event.remove(e,d+t[l],n,r,!0);ye.isEmptyObject(c)&&(delete m.handle,ye._removeData(e,"events"))}},trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f=[n||g],p=m.call(e,"type")?e.type:e,d=m.call(e,"namespace")?e.namespace.split("."):[];if(a=l=n=n||g,3!==n.nodeType&&8!==n.nodeType&&!ee.test(p+ye.event.triggered)&&(0<=p.indexOf(".")&&(p=(d=p.split(".")).shift(),d.sort()),o=p.indexOf(":")<0&&"on"+p,(e=e[ye.expando]?e:new ye.Event(p,"object"==typeof e&&e)).isTrigger=!0,e.namespace=d.join("."),e.namespace_re=e.namespace?RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=N,e.target||(e.target=n),t=null==t?[e]:ye.makeArray(t,[e]),u=ye.event.special[p]||{},r||!u.trigger||!1!==u.trigger.apply(n,t))){if(!r&&!u.noBubble&&!ye.isWindow(n)){for(s=u.delegateType||p,ee.test(s+p)||(a=a.parentNode);a;a=a.parentNode)f.push(a),l=a;l===(n.ownerDocument||g)&&f.push(l.defaultView||l.parentWindow||h)}for(c=0;(a=f[c++])&&!e.isPropagationStopped();)e.type=1<c?s:u.bindType||p,(i=(ye._data(a,"events")||{})[e.type]&&ye._data(a,"handle"))&&i.apply(a,t),(i=o&&a[o])&&ye.acceptData(a)&&i.apply&&!1===i.apply(a,t)&&e.preventDefault();if(e.type=p,!(r||e.isDefaultPrevented()||u._default&&!1!==u._default.apply(n.ownerDocument,t)||"click"===p&&ye.nodeName(n,"a"))&&ye.acceptData(n)&&o&&n[p]&&!ye.isWindow(n)){(l=n[o])&&(n[o]=null),ye.event.triggered=p;try{n[p]()}catch(e){}ye.event.triggered=N,l&&(n[o]=l)}return e.result}},dispatch:function(e){e=ye.event.fix(e);var t,n,r,i,o,a=[],s=c.call(arguments),u=(ye._data(this,"events")||{})[e.type]||[],l=ye.event.special[e.type]||{};if((s[0]=e).delegateTarget=this,!l.preDispatch||!1!==l.preDispatch.call(this,e)){for(a=ye.event.handlers.call(this,e,u),t=0;(i=a[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,o=0;(r=i.handlers[o++])&&!e.isImmediatePropagationStopped();)e.namespace_re&&!e.namespace_re.test(r.namespace)||(e.handleObj=r,e.data=r.data,(n=((ye.event.special[r.origType]||{}).handle||r.handler).apply(i.elem,s))!==N&&!1===(e.result=n)&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,o,a=[],s=t.delegateCount,u=e.target;if(s&&u.nodeType&&(!e.button||"click"!==e.type))for(;u!=this;u=u.parentNode||this)if(1===u.nodeType&&(!0!==u.disabled||"click"!==e.type)){for(i=[],o=0;o<s;o++)i[n=(r=t[o]).selector+" "]===N&&(i[n]=r.needsContext?0<=ye(n,this).index(u):ye.find(n,this,null,[u]).length),i[n]&&i.push(r);i.length&&a.push({elem:u,handlers:i})}return t.length>s&&a.push({elem:this,handlers:t.slice(s)}),a},fix:function(e){if(e[ye.expando])return e;var t,n,r,i=e.type,o=e,a=this.fixHooks[i];for(a||(this.fixHooks[i]=a=Z.test(i)?this.mouseHooks:K.test(i)?this.keyHooks:{}),r=a.props?this.props.concat(a.props):this.props,e=new ye.Event(o),t=r.length;t--;)e[n=r[t]]=o[n];return e.target||(e.target=o.srcElement||g),3===e.target.nodeType&&(e.target=e.target.parentNode),e.metaKey=!!e.metaKey,a.filter?a.filter(e,o):e},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,i,o=t.button,a=t.fromElement;return null==e.pageX&&null!=t.clientX&&(i=(r=e.target.ownerDocument||g).documentElement,n=r.body,e.pageX=t.clientX+(i&&i.scrollLeft||n&&n.scrollLeft||0)-(i&&i.clientLeft||n&&n.clientLeft||0),e.pageY=t.clientY+(i&&i.scrollTop||n&&n.scrollTop||0)-(i&&i.clientTop||n&&n.clientTop||0)),!e.relatedTarget&&a&&(e.relatedTarget=a===e.target?t.toElement:a),e.which||o===N||(e.which=1&o?1:2&o?3:4&o?2:0),e}},special:{load:{noBubble:!0},click:{trigger:function(){return ye.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):N}},focus:{trigger:function(){if(this!==g.activeElement&&this.focus)try{return this.focus(),!1}catch(e){}},delegateType:"focusin"},blur:{trigger:function(){return this===g.activeElement&&this.blur?(this.blur(),!1):N},delegateType:"focusout"},beforeunload:{postDispatch:function(e){e.result!==N&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=ye.extend(new ye.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?ye.event.trigger(i,null,t):ye.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},ye.removeEvent=g.removeEventListener?function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)}:function(e,t,n){var r="on"+t;e.detachEvent&&(typeof e[r]===y&&(e[r]=null),e.detachEvent(r,n))},ye.Event=function(e,t){return this instanceof ye.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||!1===e.returnValue||e.getPreventDefault&&e.getPreventDefault()?ne:re):this.type=e,t&&ye.extend(this,t),this.timeStamp=e&&e.timeStamp||ye.now(),this[ye.expando]=!0,N):new ye.Event(e,t)},ye.Event.prototype={isDefaultPrevented:re,isPropagationStopped:re,isImmediatePropagationStopped:re,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ne,e&&(e.preventDefault?e.preventDefault():e.returnValue=!1)},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ne,e&&(e.stopPropagation&&e.stopPropagation(),e.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=ne,this.stopPropagation()}},ye.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,i){ye.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||ye.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),ye.support.submitBubbles||(ye.event.special.submit={setup:function(){return!ye.nodeName(this,"form")&&(ye.event.add(this,"click._submit keypress._submit",function(e){var t=e.target,n=ye.nodeName(t,"input")||ye.nodeName(t,"button")?t.form:N;n&&!ye._data(n,"submitBubbles")&&(ye.event.add(n,"submit._submit",function(e){e._submit_bubble=!0}),ye._data(n,"submitBubbles",!0))}),N)},postDispatch:function(e){e._submit_bubble&&(delete e._submit_bubble,this.parentNode&&!e.isTrigger&&ye.event.simulate("submit",this.parentNode,e,!0))},teardown:function(){return!ye.nodeName(this,"form")&&(ye.event.remove(this,"._submit"),N)}}),ye.support.changeBubbles||(ye.event.special.change={setup:function(){return Q.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(ye.event.add(this,"propertychange._change",function(e){"checked"===e.originalEvent.propertyName&&(this._just_changed=!0)}),ye.event.add(this,"click._change",function(e){this._just_changed&&!e.isTrigger&&(this._just_changed=!1),ye.event.simulate("change",this,e,!0)})),!1):(ye.event.add(this,"beforeactivate._change",function(e){var t=e.target;Q.test(t.nodeName)&&!ye._data(t,"changeBubbles")&&(ye.event.add(t,"change._change",function(e){!this.parentNode||e.isSimulated||e.isTrigger||ye.event.simulate("change",this.parentNode,e,!0)}),ye._data(t,"changeBubbles",!0))}),N)},handle:function(e){var t=e.target;return this!==t||e.isSimulated||e.isTrigger||"radio"!==t.type&&"checkbox"!==t.type?e.handleObj.handler.apply(this,arguments):N},teardown:function(){return ye.event.remove(this,"._change"),!Q.test(this.nodeName)}}),ye.support.focusinBubbles||ye.each({focus:"focusin",blur:"focusout"},function(e,t){function n(e){ye.event.simulate(t,e.target,ye.event.fix(e),!0)}var r=0;ye.event.special[t]={setup:function(){0==r++&&g.addEventListener(e,n,!0)},teardown:function(){0==--r&&g.removeEventListener(e,n,!0)}}}),ye.fn.extend({on:function(e,t,n,r,i){var o,a;if("object"==typeof e){for(o in"string"!=typeof t&&(n=n||t,t=N),e)this.on(o,t,n,e[o],i);return this}if(null==n&&null==r?(r=t,n=t=N):null==r&&("string"==typeof t?(r=n,n=N):(r=n,n=t,t=N)),!1===r)r=re;else if(!r)return this;return 1===i&&(a=r,(r=function(e){return ye().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=ye.guid++)),this.each(function(){ye.event.add(this,e,r,n,t)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,ye(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(n=t,t=N),!1===n&&(n=re),this.each(function(){ye.event.remove(this,e,n,t)});for(i in e)this.off(i,t,e[i]);return this},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},trigger:function(e,t){return this.each(function(){ye.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?ye.event.trigger(e,t,n,!0):N}}),function(n,r){var e,T,w,o,t,h,l,N,g,C,i,m,y,a,s,v,c,b="sizzle"+-new Date,x=n.document,k={},E=0,f=0,u=ee(),p=ee(),d=ee(),S=typeof r,A=[],j=A.pop,D=A.push,L=A.slice,H=A.indexOf||function(e){for(var t=0,n=this.length;t<n;t++)if(this[t]===e)return t;return-1},q="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",_=M.replace("w","w#"),F="\\["+q+"*("+M+")"+q+"*(?:([*^$|!~]?=)"+q+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+_+")|)|)"+q+"*\\]",O=":("+M+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+F.replace(3,8)+")*)|.*)\\)|)",B=RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),P=RegExp("^"+q+"*,"+q+"*"),R=RegExp("^"+q+"*([\\x20\\t\\r\\n\\f>+~])"+q+"*"),W=RegExp(O),$=RegExp("^"+_+"$"),I={ID:RegExp("^#("+M+")"),CLASS:RegExp("^\\.("+M+")"),NAME:RegExp("^\\[name=['\"]?("+M+")['\"]?\\]"),TAG:RegExp("^("+M.replace("w","w*")+")"),ATTR:RegExp("^"+F),PSEUDO:RegExp("^"+O),CHILD:RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),needsContext:RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},z=/[\x20\t\r\n\f]*[+~]/,X=/^[^{]+\{\s*\[native code/,U=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,V=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,J=/'|\\/g,G=/\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,Q=/\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g,K=function(e,t){var n="0x"+t-65536;return n!=n?t:n<0?String.fromCharCode(65536+n):String.fromCharCode(55296|n>>10,56320|1023&n)};try{L.call(x.documentElement.childNodes,0)[0].nodeType}catch(e){L=function(e){for(var t,n=[];t=this[e++];)n.push(t);return n}}function Z(e){return X.test(e+"")}function ee(){var n,r=[];return n=function(e,t){return r.push(e+=" ")>w.cacheLength&&delete n[r.shift()],n[e]=t}}function te(e){return e[b]=!0,e}function ne(e){var t=C.createElement("div");try{return e(t)}catch(e){return!1}finally{t=null}}function re(e,t,n,r){var i,o,a,s,u,l,c,f,p,d;if((t?t.ownerDocument||t:x)!==C&&g(t),n=n||[],!e||"string"!=typeof e)return n;if(1!==(s=(t=t||C).nodeType)&&9!==s)return[];if(!m&&!r){if(i=U.exec(e))if(a=i[1]){if(9===s){if(!(o=t.getElementById(a))||!o.parentNode)return n;if(o.id===a)return n.push(o),n}else if(t.ownerDocument&&(o=t.ownerDocument.getElementById(a))&&v(t,o)&&o.id===a)return n.push(o),n}else{if(i[2])return D.apply(n,L.call(t.getElementsByTagName(e),0)),n;if((a=i[3])&&k.getByClassName&&t.getElementsByClassName)return D.apply(n,L.call(t.getElementsByClassName(a),0)),n}if(k.qsa&&!y.test(e)){if(c=!0,f=b,p=t,d=9===s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){for(l=ue(e),(c=t.getAttribute("id"))?f=c.replace(J,"\\$&"):t.setAttribute("id",f),f="[id='"+f+"'] ",u=l.length;u--;)l[u]=f+le(l[u]);p=z.test(e)&&t.parentNode||t,d=l.join(",")}if(d)try{return D.apply(n,L.call(p.querySelectorAll(d),0)),n}catch(e){}finally{c||t.removeAttribute("id")}}}return function(e,t,n,r){var i,o,a,s,u,l=ue(e);if(!r&&1===l.length){if(2<(o=l[0]=l[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&!m&&w.relative[o[1].type]){if(!(t=w.find.ID(a.matches[0].replace(Q,K),t)[0]))return n;e=e.slice(o.shift().value.length)}for(i=I.needsContext.test(e)?0:o.length;i--&&(a=o[i],!w.relative[s=a.type]);)if((u=w.find[s])&&(r=u(a.matches[0].replace(Q,K),z.test(o[0].type)&&t.parentNode||t))){if(o.splice(i,1),!(e=r.length&&le(o)))return D.apply(n,L.call(r,0)),n;break}}return h(e,l)(r,t,m,n,z.test(e)),n}(e.replace(B,"$1"),t,n,r)}function ie(e,t){var n=t&&e,r=n&&(~t.sourceIndex||1<<31)-(~e.sourceIndex||1<<31);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function oe(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ae(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function se(a){return te(function(o){return o=+o,te(function(e,t){for(var n,r=a([],e.length,o),i=r.length;i--;)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}for(e in t=re.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return!!t&&"HTML"!==t.nodeName},g=re.setDocument=function(e){var u=e?e.ownerDocument||e:x;return u!==C&&9===u.nodeType&&u.documentElement&&(i=(C=u).documentElement,m=t(u),k.tagNameNoComments=ne(function(e){return e.appendChild(u.createComment("")),!e.getElementsByTagName("*").length}),k.attributes=ne(function(e){e.innerHTML="<select></select>";var t=typeof e.lastChild.getAttribute("multiple");return"boolean"!=t&&"string"!=t}),k.getByClassName=ne(function(e){return e.innerHTML="<div class='hidden e'></div><div class='hidden'></div>",!(!e.getElementsByClassName||!e.getElementsByClassName("e").length)&&(e.lastChild.className="e",2===e.getElementsByClassName("e").length)}),k.getByName=ne(function(e){e.id=b+0,e.innerHTML="<a name='"+b+"'></a><div name='"+b+"'></div>",i.insertBefore(e,i.firstChild);var t=u.getElementsByName&&u.getElementsByName(b).length===2+u.getElementsByName(b+0).length;return k.getIdNotName=!u.getElementById(b),i.removeChild(e),t}),w.attrHandle=ne(function(e){return e.innerHTML="<a href='#'></a>",e.firstChild&&typeof e.firstChild.getAttribute!=S&&"#"===e.firstChild.getAttribute("href")})?{}:{href:function(e){return e.getAttribute("href",2)},type:function(e){return e.getAttribute("type")}},k.getIdNotName?(w.find.ID=function(e,t){if(typeof t.getElementById!=S&&!m){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},w.filter.ID=function(e){var t=e.replace(Q,K);return function(e){return e.getAttribute("id")===t}}):(w.find.ID=function(e,t){if(typeof t.getElementById!=S&&!m){var n=t.getElementById(e);return n?n.id===e||typeof n.getAttributeNode!=S&&n.getAttributeNode("id").value===e?[n]:r:[]}},w.filter.ID=function(e){var n=e.replace(Q,K);return function(e){var t=typeof e.getAttributeNode!=S&&e.getAttributeNode("id");return t&&t.value===n}}),w.find.TAG=k.tagNameNoComments?function(e,t){return typeof t.getElementsByTagName!=S?t.getElementsByTagName(e):r}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"!==e)return o;for(;n=o[i++];)1===n.nodeType&&r.push(n);return r},w.find.NAME=k.getByName&&function(e,t){return typeof t.getElementsByName!=S?t.getElementsByName(name):r},w.find.CLASS=k.getByClassName&&function(e,t){return typeof t.getElementsByClassName==S||m?r:t.getElementsByClassName(e)},a=[],y=[":focus"],(k.qsa=Z(u.querySelectorAll))&&(ne(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||y.push("\\["+q+"*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),e.querySelectorAll(":checked").length||y.push(":checked")}),ne(function(e){e.innerHTML="<input type='hidden' i=''/>",e.querySelectorAll("[i^='']").length&&y.push("[*^$]="+q+"*(?:\"\"|'')"),e.querySelectorAll(":enabled").length||y.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),y.push(",.*:")})),(k.matchesSelector=Z(s=i.matchesSelector||i.mozMatchesSelector||i.webkitMatchesSelector||i.oMatchesSelector||i.msMatchesSelector))&&ne(function(e){k.disconnectedMatch=s.call(e,"div"),s.call(e,"[s!='']:x"),a.push("!=",O)}),y=RegExp(y.join("|")),a=RegExp(a.join("|")),v=Z(i.contains)||i.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},c=i.compareDocumentPosition?function(e,t){var n;return e===t?(l=!0,0):(n=t.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(t))?1&n||e.parentNode&&11===e.parentNode.nodeType?e===u||v(x,e)?-1:t===u||v(x,t)?1:0:4&n?-1:1:e.compareDocumentPosition?-1:1}:function(e,t){var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(e===t)return l=!0,0;if(!i||!o)return e===u?-1:t===u?1:i?-1:o?1:0;if(i===o)return ie(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)s.unshift(n);for(;a[r]===s[r];)r++;return r?ie(a[r],s[r]):a[r]===x?-1:s[r]===x?1:0},l=!1,[0,0].sort(c),k.detectDuplicates=l),C},re.matches=function(e,t){return re(e,null,null,t)},re.matchesSelector=function(e,t){if((e.ownerDocument||e)!==C&&g(e),t=t.replace(G,"='$1']"),!(!k.matchesSelector||m||a&&a.test(t)||y.test(t)))try{var n=s.call(e,t);if(n||k.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){}return 0<re(t,C,null,[e]).length},re.contains=function(e,t){return(e.ownerDocument||e)!==C&&g(e),v(e,t)},re.attr=function(e,t){var n;return(e.ownerDocument||e)!==C&&g(e),m||(t=t.toLowerCase()),(n=w.attrHandle[t])?n(e):m||k.attributes?e.getAttribute(t):((n=e.getAttributeNode(t))||e.getAttribute(t))&&!0===e[t]?t:n&&n.specified?n.value:null},re.error=function(e){throw Error("Syntax error, unrecognized expression: "+e)},re.uniqueSort=function(e){var t,n=[],r=1,i=0;if(l=!k.detectDuplicates,e.sort(c),l){for(;t=e[r];r++)t===e[r-1]&&(i=n.push(r));for(;i--;)e.splice(n[i],1)}return e},o=re.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r];r++)n+=o(t);return n},w=re.selectors={cacheLength:50,createPseudo:te,match:I,find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(Q,K),e[3]=(e[4]||e[5]||"").replace(Q,K),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||re.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&re.error(e[0]),e},PSEUDO:function(e){var t,n=!e[5]&&e[2];return I.CHILD.test(e[0])?null:(e[4]?e[2]=e[4]:n&&W.test(n)&&(t=ue(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(t){return"*"===t?function(){return!0}:(t=t.replace(Q,K).toLowerCase(),function(e){return e.nodeName&&e.nodeName.toLowerCase()===t})},CLASS:function(e){var t=u[e+" "];return t||(t=RegExp("(^|"+q+")"+e+"("+q+"|$)"))&&u(e,function(e){return t.test(e.className||typeof e.getAttribute!=S&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=re.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(d,e,t,h,g){var m="nth"!==d.slice(0,3),y="last"!==d.slice(-4),v="of-type"===e;return 1===h&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=m!=y?"nextSibling":"previousSibling",c=e.parentNode,f=v&&e.nodeName.toLowerCase(),p=!n&&!v;if(c){if(m){for(;l;){for(o=e;o=o[l];)if(v?o.nodeName.toLowerCase()===f:1===o.nodeType)return!1;u=l="only"===d&&!u&&"nextSibling"}return!0}if(u=[y?c.firstChild:c.lastChild],y&&p){for(s=(r=(i=c[b]||(c[b]={}))[d]||[])[0]===E&&r[1],a=r[0]===E&&r[2],o=s&&c.childNodes[s];o=++s&&o&&o[l]||(a=s=0)||u.pop();)if(1===o.nodeType&&++a&&o===e){i[d]=[E,s,a];break}}else if(p&&(r=(e[b]||(e[b]={}))[d])&&r[0]===E)a=r[1];else for(;(o=++s&&o&&o[l]||(a=s=0)||u.pop())&&((v?o.nodeName.toLowerCase()!==f:1!==o.nodeType)||!++a||(p&&((o[b]||(o[b]={}))[d]=[E,a]),o!==e)););return(a-=g)===h||0==a%h&&0<=a/h}}},PSEUDO:function(e,o){var t,a=w.pseudos[e]||w.setFilters[e.toLowerCase()]||re.error("unsupported pseudo: "+e);return a[b]?a(o):1<a.length?(t=[e,e,"",o],w.setFilters.hasOwnProperty(e.toLowerCase())?te(function(e,t){for(var n,r=a(e,o),i=r.length;i--;)e[n=H.call(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:te(function(e){var r=[],i=[],s=h(e.replace(B,"$1"));return s[b]?te(function(e,t,n,r){for(var i,o=s(e,null,r,[]),a=e.length;a--;)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),!i.pop()}}),has:te(function(t){return function(e){return 0<re(t,e).length}}),contains:te(function(t){return function(e){return-1<(e.textContent||e.innerText||o(e)).indexOf(t)}}),lang:te(function(n){return $.test(n||"")||re.error("unsupported lang: "+n),n=n.replace(Q,K).toLowerCase(),function(e){var t;do{if(t=m?e.getAttribute("xml:lang")||e.getAttribute("lang"):e.lang)return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===i},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return!1===e.disabled},disabled:function(e){return!0===e.disabled},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if("@"<e.nodeName||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!w.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return V.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||t.toLowerCase()===e.type)},first:se(function(){return[0]}),last:se(function(e,t){return[t-1]}),eq:se(function(e,t,n){return[n<0?n+t:n]}),even:se(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:se(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:se(function(e,t,n){for(var r=n<0?n+t:n;0<=--r;)e.push(r);return e}),gt:se(function(e,t,n){for(var r=n<0?n+t:n;t>++r;)e.push(r);return e})}},{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[e]=oe(e);for(e in{submit:!0,reset:!0})w.pseudos[e]=ae(e);function ue(e,t){var n,r,i,o,a,s,u,l=p[e+" "];if(l)return t?0:l.slice(0);for(a=e,s=[],u=w.preFilter;a;){for(o in n&&!(r=P.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=R.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(B," ")}),a=a.slice(n.length)),w.filter)!(r=I[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?re.error(e):p(e,s).slice(0)}function le(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function ce(s,e,t){var u=e.dir,l=t&&"parentNode"===u,c=f++;return e.first?function(e,t,n){for(;e=e[u];)if(1===e.nodeType||l)return s(e,t,n)}:function(e,t,n){var r,i,o,a=E+" "+c;if(n){for(;e=e[u];)if((1===e.nodeType||l)&&s(e,t,n))return!0}else for(;e=e[u];)if(1===e.nodeType||l)if((i=(o=e[b]||(e[b]={}))[u])&&i[0]===a){if(!0===(r=i[1])||r===T)return!0===r}else if((i=o[u]=[a])[1]=s(e,t,n)||T,!0===i[1])return!0}}function fe(i){return 1<i.length?function(e,t,n){for(var r=i.length;r--;)if(!i[r](e,t,n))return!1;return!0}:i[0]}function pe(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)!(o=e[s])||n&&!n(o,r,i)||(a.push(o),l&&t.push(s));return a}function de(d,h,g,m,y,e){return m&&!m[b]&&(m=de(m)),y&&!y[b]&&(y=de(y,e)),te(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)re(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:pe(c,s,d,n,r),p=g?y||(e?d:l||m)?[]:t:f;if(g&&g(f,p,n,r),m)for(i=pe(p,u),m(i,[],n,r),o=i.length;o--;)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a));if(e){if(y||d){if(y){for(i=[],o=p.length;o--;)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}for(o=p.length;o--;)(a=p[o])&&-1<(i=y?H.call(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=pe(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):D.apply(t,p)})}function he(e){for(var r,t,n,i=e.length,o=w.relative[e[0].type],a=o||w.relative[" "],s=o?1:0,u=ce(function(e){return e===r},a,!0),l=ce(function(e){return-1<H.call(r,e)},a,!0),c=[function(e,t,n){return!o&&(n||t!==N)||((r=t).nodeType?u:l)(e,t,n)}];s<i;s++)if(t=w.relative[e[s].type])c=[ce(fe(c),t)];else{if((t=w.filter[e[s].type].apply(null,e[s].matches))[b]){for(n=++s;n<i&&!w.relative[e[n].type];n++);return de(1<s&&fe(c),1<s&&le(e.slice(0,s-1)).replace(B,"$1"),t,s<n&&he(e.slice(s,n)),n<i&&he(e=e.slice(n)),n<i&&le(e))}c.push(t)}return fe(c)}function ge(m,y){function e(e,t,n,r,i){var o,a,s,u=[],l=0,c="0",f=e&&[],p=null!=i,d=N,h=e||x&&w.find.TAG("*",i&&t.parentNode||t),g=E+=null==d?1:Math.random()||.1;for(p&&(N=t!==C&&t,T=v);null!=(o=h[c]);c++){if(x&&o){for(a=0;s=m[a++];)if(s(o,t,n)){r.push(o);break}p&&(E=g,T=++v)}b&&((o=!s&&o)&&l--,e&&f.push(o))}if(l+=c,b&&c!==l){for(a=0;s=y[a++];)s(f,u,t,n);if(e){if(0<l)for(;c--;)f[c]||u[c]||(u[c]=j.call(r));u=pe(u)}D.apply(r,u),p&&!e&&0<u.length&&1<l+y.length&&re.uniqueSort(r)}return p&&(E=g,N=d),f}var v=0,b=0<y.length,x=0<m.length;return b?te(e):e}function me(){}h=re.compile=function(e,t){var n,r=[],i=[],o=d[e+" "];if(!o){for(n=(t=t||ue(e)).length;n--;)(o=he(t[n]))[b]?r.push(o):i.push(o);o=d(e,ge(i,r))}return o},w.pseudos.nth=w.pseudos.eq,w.filters=me.prototype=w.pseudos,w.setFilters=new me,g(),re.attr=ye.attr,ye.find=re,ye.expr=re.selectors,ye.expr[":"]=ye.expr.pseudos,ye.unique=re.uniqueSort,ye.text=re.getText,ye.isXMLDoc=re.isXML,ye.contains=re.contains}(h);var ie=/Until$/,oe=/^(?:parents|prev(?:Until|All))/,ae=/^.[^:#\[\.,]*$/,se=ye.expr.match.needsContext,ue={children:!0,contents:!0,next:!0,prev:!0};function le(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function ce(e,n,r){if(n=n||0,ye.isFunction(n))return ye.grep(e,function(e,t){return!!n.call(e,t,e)===r});if(n.nodeType)return ye.grep(e,function(e){return e===n===r});if("string"==typeof n){var t=ye.grep(e,function(e){return 1===e.nodeType});if(ae.test(n))return ye.filter(n,t,!r);n=ye.filter(n,t)}return ye.grep(e,function(e){return 0<=ye.inArray(e,n)===r})}function fe(e){var t=pe.split("|"),n=e.createDocumentFragment();if(n.createElement)for(;t.length;)n.createElement(t.pop());return n}ye.fn.extend({find:function(e){var t,n,r,i=this.length;if("string"!=typeof e)return(r=this).pushStack(ye(e).filter(function(){for(t=0;t<i;t++)if(ye.contains(r[t],this))return!0}));for(n=[],t=0;t<i;t++)ye.find(e,this[t],n);return(n=this.pushStack(1<i?ye.unique(n):n)).selector=(this.selector?this.selector+" ":"")+e,n},has:function(e){var t,n=ye(e,this),r=n.length;return this.filter(function(){for(t=0;t<r;t++)if(ye.contains(this,n[t]))return!0})},not:function(e){return this.pushStack(ce(this,e,!1))},filter:function(e){return this.pushStack(ce(this,e,!0))},is:function(e){return!!e&&("string"==typeof e?se.test(e)?0<=ye(e,this.context).index(this[0]):0<ye.filter(e,this).length:0<this.filter(e).length)},closest:function(e,t){for(var n,r=0,i=this.length,o=[],a=se.test(e)||"string"!=typeof e?ye(e,t||this.context):0;r<i;r++)for(n=this[r];n&&n.ownerDocument&&n!==t&&11!==n.nodeType;){if(a?-1<a.index(n):ye.find.matchesSelector(n,e)){o.push(n);break}n=n.parentNode}return this.pushStack(1<o.length?ye.unique(o):o)},index:function(e){return e?"string"==typeof e?ye.inArray(this[0],ye(e)):ye.inArray(e.jquery?e[0]:e,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n="string"==typeof e?ye(e,t):ye.makeArray(e&&e.nodeType?[e]:e),r=ye.merge(this.get(),n);return this.pushStack(ye.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ye.fn.andSelf=ye.fn.addBack,ye.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ye.dir(e,"parentNode")},parentsUntil:function(e,t,n){return ye.dir(e,"parentNode",n)},next:function(e){return le(e,"nextSibling")},prev:function(e){return le(e,"previousSibling")},nextAll:function(e){return ye.dir(e,"nextSibling")},prevAll:function(e){return ye.dir(e,"previousSibling")},nextUntil:function(e,t,n){return ye.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return ye.dir(e,"previousSibling",n)},siblings:function(e){return ye.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return ye.sibling(e.firstChild)},contents:function(e){return ye.nodeName(e,"iframe")?e.contentDocument||e.contentWindow.document:ye.merge([],e.childNodes)}},function(r,i){ye.fn[r]=function(e,t){var n=ye.map(this,i,e);return ie.test(r)||(t=e),t&&"string"==typeof t&&(n=ye.filter(t,n)),n=1<this.length&&!ue[r]?ye.unique(n):n,1<this.length&&oe.test(r)&&(n=n.reverse()),this.pushStack(n)}}),ye.extend({filter:function(e,t,n){return n&&(e=":not("+e+")"),1===t.length?ye.find.matchesSelector(t[0],e)?[t[0]]:[]:ye.find.matches(e,t)},dir:function(e,t,n){for(var r=[],i=e[t];i&&9!==i.nodeType&&(n===N||1!==i.nodeType||!ye(i).is(n));)1===i.nodeType&&r.push(i),i=i[t];return r},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});var pe="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",de=/ jQuery\d+="(?:null|\d+)"/g,he=RegExp("<(?:"+pe+")[\\s/>]","i"),ge=/^\s+/,me=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ve=/<([\w:]+)/,be=/<tbody/i,xe=/<|&#?\w+;/,Te=/<(?:script|style|link)/i,we=/^(?:checkbox|radio)$/i,Ne=/checked\s*(?:[^=]|=\s*.checked.)/i,Ce=/^$|\/(?:java|ecma)script/i,ke=/^true\/(.*)/,Ee=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Se={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ye.support.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},Ae=fe(g).appendChild(g.createElement("div"));function je(e){var t=e.getAttributeNode("type");return e.type=(t&&t.specified)+"/"+e.type,e}function De(e){var t=ke.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function Le(e,t){for(var n,r=0;null!=(n=e[r]);r++)ye._data(n,"globalEval",!t||ye._data(t[r],"globalEval"))}function He(e,t){if(1===t.nodeType&&ye.hasData(e)){var n,r,i,o=ye._data(e),a=ye._data(t,o),s=o.events;if(s)for(n in delete a.handle,a.events={},s)for(r=0,i=s[n].length;r<i;r++)ye.event.add(t,n,s[n][r]);a.data&&(a.data=ye.extend({},a.data))}}function qe(e,t){var n,r,i;if(1===t.nodeType){if(n=t.nodeName.toLowerCase(),!ye.support.noCloneEvent&&t[ye.expando]){for(r in(i=ye._data(t)).events)ye.removeEvent(t,r,i.handle);t.removeAttribute(ye.expando)}"script"===n&&t.text!==e.text?(je(t).text=e.text,De(t)):"object"===n?(t.parentNode&&(t.outerHTML=e.outerHTML),ye.support.html5Clone&&e.innerHTML&&!ye.trim(t.innerHTML)&&(t.innerHTML=e.innerHTML)):"input"===n&&we.test(e.type)?(t.defaultChecked=t.checked=e.checked,t.value!==e.value&&(t.value=e.value)):"option"===n?t.defaultSelected=t.selected=e.defaultSelected:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}}function Me(e,t){var n,r,i=0,o=typeof e.getElementsByTagName!==y?e.getElementsByTagName(t||"*"):typeof e.querySelectorAll!==y?e.querySelectorAll(t||"*"):N;if(!o)for(o=[],n=e.childNodes||e;null!=(r=n[i]);i++)!t||ye.nodeName(r,t)?o.push(r):ye.merge(o,Me(r,t));return t===N||t&&ye.nodeName(e,t)?ye.merge([e],o):o}function _e(e){we.test(e.type)&&(e.defaultChecked=e.checked)}Se.optgroup=Se.option,Se.tbody=Se.tfoot=Se.colgroup=Se.caption=Se.thead,Se.th=Se.td,ye.fn.extend({text:function(e){return ye.access(this,function(e){return e===N?ye.text(this):this.empty().append((this[0]&&this[0].ownerDocument||g).createTextNode(e))},null,e,arguments.length)},wrapAll:function(t){if(ye.isFunction(t))return this.each(function(e){ye(this).wrapAll(t.call(this,e))});if(this[0]){var e=ye(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var e=this;e.firstChild&&1===e.firstChild.nodeType;)e=e.firstChild;return e}).append(this)}return this},wrapInner:function(n){return ye.isFunction(n)?this.each(function(e){ye(this).wrapInner(n.call(this,e))}):this.each(function(){var e=ye(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=ye.isFunction(t);return this.each(function(e){ye(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(){return this.parent().each(function(){ye.nodeName(this,"body")||ye(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||this.appendChild(e)})},prepend:function(){return this.domManip(arguments,!0,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||this.insertBefore(e,this.firstChild)})},before:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,!1,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,r=0;null!=(n=this[r]);r++)(!e||0<ye.filter(e,[n]).length)&&(t||1!==n.nodeType||ye.cleanData(Me(n)),n.parentNode&&(t&&ye.contains(n.ownerDocument,n)&&Le(Me(n,"script")),n.parentNode.removeChild(n)));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++){for(1===e.nodeType&&ye.cleanData(Me(e,!1));e.firstChild;)e.removeChild(e.firstChild);e.options&&ye.nodeName(e,"select")&&(e.options.length=0)}return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ye.clone(this,e,t)})},html:function(e){return ye.access(this,function(e){var t=this[0]||{},n=0,r=this.length;if(e===N)return 1===t.nodeType?t.innerHTML.replace(de,""):N;if(!("string"!=typeof e||Te.test(e)||!ye.support.htmlSerialize&&he.test(e)||!ye.support.leadingWhitespace&&ge.test(e)||Se[(ve.exec(e)||["",""])[1].toLowerCase()])){e=e.replace(me,"<$1></$2>");try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(ye.cleanData(Me(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(e){return ye.isFunction(e)||"string"==typeof e||(e=ye(e).not(this).detach()),this.domManip([e],!0,function(e){var t=this.nextSibling,n=this.parentNode;n&&(ye(this).remove(),n.insertBefore(e,t))})},detach:function(e){return this.remove(e,!0)},domManip:function(n,r,i){n=v.apply([],n);var e,t,o,a,s,u,l,c,f=0,p=this.length,d=this,h=p-1,g=n[0],m=ye.isFunction(g);if(m||!(p<=1||"string"!=typeof g||ye.support.checkClone)&&Ne.test(g))return this.each(function(e){var t=d.eq(e);m&&(n[0]=g.call(this,e,r?t.html():N)),t.domManip(n,r,i)});if(p&&(e=(u=ye.buildFragment(n,this[0].ownerDocument,!1,this)).firstChild,1===u.childNodes.length&&(u=e),e)){for(r=r&&ye.nodeName(e,"tr"),o=(a=ye.map(Me(u,"script"),je)).length;f<p;f++)t=u,f!==h&&(t=ye.clone(t,!0,!0),o&&ye.merge(a,Me(t,"script"))),i.call(r&&ye.nodeName(this[f],"table")?(l=this[f],c="tbody",l.getElementsByTagName(c)[0]||l.appendChild(l.ownerDocument.createElement(c))):this[f],t,f);if(o)for(s=a[a.length-1].ownerDocument,ye.map(a,De),f=0;f<o;f++)t=a[f],Ce.test(t.type||"")&&!ye._data(t,"globalEval")&&ye.contains(s,t)&&(t.src?ye.ajax({url:t.src,type:"GET",dataType:"script",async:!1,global:!1,throws:!0}):ye.globalEval((t.text||t.textContent||t.innerHTML||"").replace(Ee,"")));u=e=null}return this}}),ye.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){ye.fn[e]=function(e){for(var t,n=0,r=[],i=ye(e),o=i.length-1;n<=o;n++)t=n===o?this:this.clone(!0),ye(i[n])[a](t),l.apply(r,t.get());return this.pushStack(r)}}),ye.extend({clone:function(e,t,n){var r,i,o,a,s,u=ye.contains(e.ownerDocument,e);if(ye.support.html5Clone||ye.isXMLDoc(e)||!he.test("<"+e.nodeName+">")?o=e.cloneNode(!0):(Ae.innerHTML=e.outerHTML,Ae.removeChild(o=Ae.firstChild)),!(ye.support.noCloneEvent&&ye.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ye.isXMLDoc(e)))for(r=Me(o),s=Me(e),a=0;null!=(i=s[a]);++a)r[a]&&qe(i,r[a]);if(t)if(n)for(s=s||Me(e),r=r||Me(o),a=0;null!=(i=s[a]);a++)He(i,r[a]);else He(e,o);return 0<(r=Me(o,"script")).length&&Le(r,!u&&Me(e,"script")),r=s=i=null,o},buildFragment:function(e,t,n,r){for(var i,o,a,s,u,l,c,f=e.length,p=fe(t),d=[],h=0;h<f;h++)if((o=e[h])||0===o)if("object"===ye.type(o))ye.merge(d,o.nodeType?[o]:o);else if(xe.test(o)){for(s=s||p.appendChild(t.createElement("div")),u=(ve.exec(o)||["",""])[1].toLowerCase(),c=Se[u]||Se._default,s.innerHTML=c[1]+o.replace(me,"<$1></$2>")+c[2],i=c[0];i--;)s=s.lastChild;if(!ye.support.leadingWhitespace&&ge.test(o)&&d.push(t.createTextNode(ge.exec(o)[0])),!ye.support.tbody)for(i=(o="table"!==u||be.test(o)?"<table>"!==c[1]||be.test(o)?0:s:s.firstChild)&&o.childNodes.length;i--;)ye.nodeName(l=o.childNodes[i],"tbody")&&!l.childNodes.length&&o.removeChild(l);for(ye.merge(d,s.childNodes),s.textContent="";s.firstChild;)s.removeChild(s.firstChild);s=p.lastChild}else d.push(t.createTextNode(o));for(s&&p.removeChild(s),ye.support.appendChecked||ye.grep(Me(d,"input"),_e),h=0;o=d[h++];)if((!r||-1===ye.inArray(o,r))&&(a=ye.contains(o.ownerDocument,o),s=Me(p.appendChild(o),"script"),a&&Le(s),n))for(i=0;o=s[i++];)Ce.test(o.type||"")&&n.push(o);return s=null,p},cleanData:function(e,t){for(var n,r,i,o,a=0,s=ye.expando,u=ye.cache,l=ye.support.deleteExpando,c=ye.event.special;null!=(n=e[a]);a++)if((t||ye.acceptData(n))&&(o=(i=n[s])&&u[i])){if(o.events)for(r in o.events)c[r]?ye.event.remove(n,r):ye.removeEvent(n,r,o.handle);u[i]&&(delete u[i],l?delete n[s]:typeof n.removeAttribute!==y?n.removeAttribute(s):n[s]=null,f.push(i))}}});var Fe,Oe,Be,Pe=/alpha\([^)]*\)/i,Re=/opacity\s*=\s*([^)]*)/,We=/^(top|right|bottom|left)$/,$e=/^(none|table(?!-c[ea]).+)/,Ie=/^margin/,ze=RegExp("^("+x+")(.*)$","i"),Xe=RegExp("^("+x+")(?!px)[a-z%]+$","i"),Ue=RegExp("^([+-])=("+x+")","i"),Ve={BODY:"block"},Ye={position:"absolute",visibility:"hidden",display:"block"},Je={letterSpacing:0,fontWeight:400},Ge=["Top","Right","Bottom","Left"],Qe=["Webkit","O","Moz","ms"];function Ke(e,t){if(t in e)return t;for(var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,i=Qe.length;i--;)if((t=Qe[i]+n)in e)return t;return r}function Ze(e,t){return e=t||e,"none"===ye.css(e,"display")||!ye.contains(e.ownerDocument,e)}function et(e,t){for(var n,r,i,o=[],a=0,s=e.length;a<s;a++)(r=e[a]).style&&(o[a]=ye._data(r,"olddisplay"),n=r.style.display,t?(o[a]||"none"!==n||(r.style.display=""),""===r.style.display&&Ze(r)&&(o[a]=ye._data(r,"olddisplay",it(r.nodeName)))):o[a]||(i=Ze(r),(n&&"none"!==n||!i)&&ye._data(r,"olddisplay",i?n:ye.css(r,"display"))));for(a=0;a<s;a++)(r=e[a]).style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?o[a]||"":"none"));return e}function tt(e,t,n){var r=ze.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function nt(e,t,n,r,i){for(var o=n===(r?"border":"content")?4:"width"===t?1:0,a=0;o<4;o+=2)"margin"===n&&(a+=ye.css(e,n+Ge[o],!0,i)),r?("content"===n&&(a-=ye.css(e,"padding"+Ge[o],!0,i)),"margin"!==n&&(a-=ye.css(e,"border"+Ge[o]+"Width",!0,i))):(a+=ye.css(e,"padding"+Ge[o],!0,i),"padding"!==n&&(a+=ye.css(e,"border"+Ge[o]+"Width",!0,i)));return a}function rt(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,o=Oe(e),a=ye.support.boxSizing&&"border-box"===ye.css(e,"boxSizing",!1,o);if(i<=0||null==i){if(((i=Be(e,t,o))<0||null==i)&&(i=e.style[t]),Xe.test(i))return i;r=a&&(ye.support.boxSizingReliable||i===e.style[t]),i=parseFloat(i)||0}return i+nt(e,t,n||(a?"border":"content"),r,o)+"px"}function it(e){var t=g,n=Ve[e];return n||("none"!==(n=ot(e,t))&&n||((t=((Fe=(Fe||ye("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(t.documentElement))[0].contentWindow||Fe[0].contentDocument).document).write("<!doctype html><html><body>"),t.close(),n=ot(e,t),Fe.detach()),Ve[e]=n),n}function ot(e,t){var n=ye(t.createElement(e)).appendTo(t.body),r=ye.css(n[0],"display");return n.remove(),r}ye.fn.extend({css:function(e,t){return ye.access(this,function(e,t,n){var r,i,o={},a=0;if(ye.isArray(t)){for(i=Oe(e),r=t.length;a<r;a++)o[t[a]]=ye.css(e,t[a],!1,i);return o}return n!==N?ye.style(e,t,n):ye.css(e,t)},e,t,1<arguments.length)},show:function(){return et(this,!0)},hide:function(){return et(this)},toggle:function(e){var t="boolean"==typeof e;return this.each(function(){(t?e:Ze(this))?ye(this).show():ye(this).hide()})}}),ye.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Be(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:ye.support.cssFloat?"cssFloat":"styleFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=ye.camelCase(t),u=e.style;if(t=ye.cssProps[s]||(ye.cssProps[s]=Ke(u,s)),a=ye.cssHooks[t]||ye.cssHooks[s],n===N)return a&&"get"in a&&(i=a.get(e,!1,r))!==N?i:u[t];if("string"===(o=typeof n)&&(i=Ue.exec(n))&&(n=(i[1]+1)*i[2]+parseFloat(ye.css(e,t)),o="number"),!(null==n||"number"===o&&isNaN(n)||("number"!==o||ye.cssNumber[s]||(n+="px"),ye.support.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),a&&"set"in a&&(n=a.set(e,n,r))===N)))try{u[t]=n}catch(e){}}},css:function(e,t,n,r){var i,o,a,s=ye.camelCase(t);return t=ye.cssProps[s]||(ye.cssProps[s]=Ke(e.style,s)),(a=ye.cssHooks[t]||ye.cssHooks[s])&&"get"in a&&(o=a.get(e,!0,n)),o===N&&(o=Be(e,t,r)),"normal"===o&&t in Je&&(o=Je[t]),""===n||n?(i=parseFloat(o),!0===n||ye.isNumeric(i)?i||0:o):o},swap:function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];for(o in i=n.apply(e,r||[]),t)e.style[o]=a[o];return i}}),h.getComputedStyle?(Oe=function(e){return h.getComputedStyle(e,null)},Be=function(e,t,n){var r,i,o,a=n||Oe(e),s=a?a.getPropertyValue(t)||a[t]:N,u=e.style;return a&&(""!==s||ye.contains(e.ownerDocument,e)||(s=ye.style(e,t)),Xe.test(s)&&Ie.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=s,s=a.width,u.width=r,u.minWidth=i,u.maxWidth=o)),s}):g.documentElement.currentStyle&&(Oe=function(e){return e.currentStyle},Be=function(e,t,n){var r,i,o,a=n||Oe(e),s=a?a[t]:N,u=e.style;return null==s&&u&&u[t]&&(s=u[t]),Xe.test(s)&&!We.test(t)&&(r=u.left,(o=(i=e.runtimeStyle)&&i.left)&&(i.left=e.currentStyle.left),u.left="fontSize"===t?"1em":s,s=u.pixelLeft+"px",u.left=r,o&&(i.left=o)),""===s?"auto":s}),ye.each(["height","width"],function(e,i){ye.cssHooks[i]={get:function(e,t,n){return t?0===e.offsetWidth&&$e.test(ye.css(e,"display"))?ye.swap(e,Ye,function(){return rt(e,i,n)}):rt(e,i,n):N},set:function(e,t,n){var r=n&&Oe(e);return tt(0,t,n?nt(e,i,n,ye.support.boxSizing&&"border-box"===ye.css(e,"boxSizing",!1,r),r):0)}}}),ye.support.opacity||(ye.cssHooks.opacity={get:function(e,t){return Re.test((t&&e.currentStyle?e.currentStyle.filter:e.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":t?"1":""},set:function(e,t){var n=e.style,r=e.currentStyle,i=ye.isNumeric(t)?"alpha(opacity="+100*t+")":"",o=r&&r.filter||n.filter||"";((n.zoom=1)<=t||""===t)&&""===ye.trim(o.replace(Pe,""))&&n.removeAttribute&&(n.removeAttribute("filter"),""===t||r&&!r.filter)||(n.filter=Pe.test(o)?o.replace(Pe,i):o+" "+i)}}),ye(function(){ye.support.reliableMarginRight||(ye.cssHooks.marginRight={get:function(e,t){return t?ye.swap(e,{display:"inline-block"},Be,[e,"marginRight"]):N}}),!ye.support.pixelPosition&&ye.fn.position&&ye.each(["top","left"],function(e,n){ye.cssHooks[n]={get:function(e,t){return t?(t=Be(e,n),Xe.test(t)?ye(e).position()[n]+"px":t):N}}})}),ye.expr&&ye.expr.filters&&(ye.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0||!ye.support.reliableHiddenOffsets&&"none"===(e.style&&e.style.display||ye.css(e,"display"))},ye.expr.filters.visible=function(e){return!ye.expr.filters.hidden(e)}),ye.each({margin:"",padding:"",border:"Width"},function(i,o){ye.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+Ge[t]+o]=r[t]||r[t-2]||r[0];return n}},Ie.test(i)||(ye.cssHooks[i+o].set=tt)});var at=/%20/g,st=/\[\]$/,ut=/\r?\n/g,lt=/^(?:submit|button|image|reset|file)$/i,ct=/^(?:input|select|textarea|keygen)/i;function ft(n,e,r,i){var t;if(ye.isArray(e))ye.each(e,function(e,t){r||st.test(n)?i(n,t):ft(n+"["+("object"==typeof t?e:"")+"]",t,r,i)});else if(r||"object"!==ye.type(e))i(n,e);else for(t in e)ft(n+"["+t+"]",e[t],r,i)}ye.fn.extend({serialize:function(){return ye.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ye.prop(this,"elements");return e?ye.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ye(this).is(":disabled")&&ct.test(this.nodeName)&&!lt.test(e)&&(this.checked||!we.test(e))}).map(function(e,t){var n=ye(this).val();return null==n?null:ye.isArray(n)?ye.map(n,function(e){return{name:t.name,value:e.replace(ut,"\r\n")}}):{name:t.name,value:n.replace(ut,"\r\n")}}).get()}}),ye.param=function(e,t){function n(e,t){t=ye.isFunction(t)?t():null==t?"":t,i[i.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)}var r,i=[];if(t===N&&(t=ye.ajaxSettings&&ye.ajaxSettings.traditional),ye.isArray(e)||e.jquery&&!ye.isPlainObject(e))ye.each(e,function(){n(this.name,this.value)});else for(r in e)ft(r,e[r],t,n);return i.join("&").replace(at,"+")},ye.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,n){ye.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),ye.fn.hover=function(e,t){return this.mouseenter(e).mouseleave(t||e)};var pt,dt,ht=ye.now(),gt=/\?/,mt=/#.*$/,yt=/([?&])_=[^&]*/,vt=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,bt=/^(?:GET|HEAD)$/,xt=/^\/\//,Tt=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,wt=ye.fn.load,Nt={},Ct={},kt="*/".concat("*");try{dt=e.href}catch(e){(dt=g.createElement("a")).href="",dt=dt.href}function Et(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(C)||[];if(ye.isFunction(t))for(;n=i[r++];)"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function St(t,i,o,a){var s={},u=t===Ct;function l(e){var r;return s[e]=!0,ye.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):N:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function At(e,t){var n,r,i=ye.ajaxSettings.flatOptions||{};for(r in t)t[r]!==N&&((i[r]?e:n=n||{})[r]=t[r]);return n&&ye.extend(!0,e,n),e}pt=Tt.exec(dt.toLowerCase())||[],ye.fn.load=function(e,t,n){if("string"!=typeof e&&wt)return wt.apply(this,arguments);var r,i,o,a=this,s=e.indexOf(" ");return 0<=s&&(r=e.slice(s,e.length),e=e.slice(0,s)),ye.isFunction(t)?(n=t,t=N):t&&"object"==typeof t&&(o="POST"),0<a.length&&ye.ajax({url:e,type:o,dataType:"html",data:t}).done(function(e){i=arguments,a.html(r?ye("<div>").append(ye.parseHTML(e)).find(r):e)}).complete(n&&function(e,t){a.each(n,i||[e.responseText,t,e])}),this},ye.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ye.fn[t]=function(e){return this.on(t,e)}}),ye.each(["get","post"],function(e,i){ye[i]=function(e,t,n,r){return ye.isFunction(t)&&(r=r||n,n=t,t=N),ye.ajax({url:e,type:i,dataType:r,data:t,success:n})}}),ye.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:dt,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(pt[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":kt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":h.String,"text html":!0,"text json":ye.parseJSON,"text xml":ye.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?At(At(e,ye.ajaxSettings),t):At(ye.ajaxSettings,e)},ajaxPrefilter:Et(Nt),ajaxTransport:Et(Ct),ajax:function(e,t){"object"==typeof e&&(t=e,e=N),t=t||{};var n,r,c,f,p,d,h,i,g=ye.ajaxSetup({},t),m=g.context||g,y=g.context&&(m.nodeType||m.jquery)?ye(m):ye.event,v=ye.Deferred(),b=ye.Callbacks("once memory"),x=g.statusCode||{},o={},a={},T=0,s="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===T){if(!i)for(i={};t=vt.exec(f);)i[t[1].toLowerCase()]=t[2];t=i[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===T?f:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return T||(e=a[n]=a[n]||e,o[e]=t),this},overrideMimeType:function(e){return T||(g.mimeType=e),this},statusCode:function(e){var t;if(e)if(T<2)for(t in e)x[t]=[x[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||s;return h&&h.abort(t),u(0,t),this}};if(v.promise(w).complete=b.add,w.success=w.done,w.error=w.fail,g.url=((e||g.url||dt)+"").replace(mt,"").replace(xt,pt[1]+"//"),g.type=t.method||t.type||g.method||g.type,g.dataTypes=ye.trim(g.dataType||"*").toLowerCase().match(C)||[""],null==g.crossDomain&&(n=Tt.exec(g.url.toLowerCase()),g.crossDomain=!(!n||n[1]===pt[1]&&n[2]===pt[2]&&(n[3]||("http:"===n[1]?80:443))==(pt[3]||("http:"===pt[1]?80:443)))),g.data&&g.processData&&"string"!=typeof g.data&&(g.data=ye.param(g.data,g.traditional)),St(Nt,g,t,w),2===T)return w;for(r in(d=g.global)&&0==ye.active++&&ye.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!bt.test(g.type),c=g.url,g.hasContent||(g.data&&(c=g.url+=(gt.test(c)?"&":"?")+g.data,delete g.data),!1===g.cache&&(g.url=yt.test(c)?c.replace(yt,"$1_="+ht++):c+(gt.test(c)?"&":"?")+"_="+ht++)),g.ifModified&&(ye.lastModified[c]&&w.setRequestHeader("If-Modified-Since",ye.lastModified[c]),ye.etag[c]&&w.setRequestHeader("If-None-Match",ye.etag[c])),(g.data&&g.hasContent&&!1!==g.contentType||t.contentType)&&w.setRequestHeader("Content-Type",g.contentType),w.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+kt+"; q=0.01":""):g.accepts["*"]),g.headers)w.setRequestHeader(r,g.headers[r]);if(g.beforeSend&&(!1===g.beforeSend.call(m,w,g)||2===T))return w.abort();for(r in s="abort",{success:1,error:1,complete:1})w[r](g[r]);if(h=St(Ct,g,t,w)){w.readyState=1,d&&y.trigger("ajaxSend",[w,g]),g.async&&0<g.timeout&&(p=setTimeout(function(){w.abort("timeout")},g.timeout));try{T=1,h.send(o,u)}catch(e){if(!(T<2))throw e;u(-1,e)}}else u(-1,"No Transport");function u(e,t,n,r){var i,o,a,s,u,l=t;2!==T&&(T=2,p&&clearTimeout(p),h=N,f=r||"",w.readyState=0<e?4:0,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes,l=e.responseFields;for(a in l)a in n&&(t[l[a]]=n[a]);for(;"*"===u[0];)u.shift(),i===N&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(a in s)if(s[a]&&s[a].test(i)){u.unshift(a);break}if(u[0]in n)o=u[0];else{for(a in n){if(!u[0]||e.converters[a+" "+u[0]]){o=a;break}r=r||a}o=o||r}return o?(o!==u[0]&&u.unshift(o),n[o]):N}(g,w,n)),200<=e&&e<300||304===e?(g.ifModified&&((u=w.getResponseHeader("Last-Modified"))&&(ye.lastModified[c]=u),(u=w.getResponseHeader("etag"))&&(ye.etag[c]=u)),204===e?(i=!0,l="nocontent"):304===e?(i=!0,l="notmodified"):(l=(i=function(e,t){var n,r,i,o,a={},s=0,u=e.dataTypes.slice(),l=u[0];if(e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u[1])for(i in e.converters)a[i.toLowerCase()]=e.converters[i];for(;r=u[++s];)if("*"!==r){if("*"!==l&&l!==r){if(!(i=a[l+" "+r]||a["* "+r]))for(n in a)if((o=n.split(" "))[1]===r&&(i=a[l+" "+o[0]]||a["* "+o[0]])){!0===i?i=a[n]:!0!==a[n]&&(r=o[0],u.splice(s--,0,r));break}if(!0!==i)if(i&&e.throws)t=i(t);else try{t=i(t)}catch(e){return{state:"parsererror",error:i?e:"No conversion from "+l+" to "+r}}}l=r}return{state:"success",data:t}}(g,s)).state,o=i.data,i=!(a=i.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),w.status=e,w.statusText=(t||l)+"",i?v.resolveWith(m,[o,l,w]):v.rejectWith(m,[w,l,a]),w.statusCode(x),x=N,d&&y.trigger(i?"ajaxSuccess":"ajaxError",[w,g,i?o:a]),b.fireWith(m,[w,l]),d&&(y.trigger("ajaxComplete",[w,g]),--ye.active||ye.event.trigger("ajaxStop")))}return w},getScript:function(e,t){return ye.get(e,N,t,"script")},getJSON:function(e,t,n){return ye.get(e,t,n,"json")}}),ye.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return ye.globalEval(e),e}}}),ye.ajaxPrefilter("script",function(e){e.cache===N&&(e.cache=!1),e.crossDomain&&(e.type="GET",e.global=!1)}),ye.ajaxTransport("script",function(t){if(t.crossDomain){var r,i=g.head||ye("head")[0]||g.documentElement;return{send:function(e,n){(r=g.createElement("script")).async=!0,t.scriptCharset&&(r.charset=t.scriptCharset),r.src=t.url,r.onload=r.onreadystatechange=function(e,t){!t&&r.readyState&&!/loaded|complete/.test(r.readyState)||(r.onload=r.onreadystatechange=null,r.parentNode&&r.parentNode.removeChild(r),r=null,t||n(200,"success"))},i.insertBefore(r,i.firstChild)},abort:function(){r&&r.onload(N,!0)}}}});var jt=[],Dt=/(=)\?(?=&|$)|\?\?/;ye.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=jt.pop()||ye.expando+"_"+ht++;return this[e]=!0,e}}),ye.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Dt.test(e.url)?"url":"string"==typeof e.data&&!(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Dt.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(r=e.jsonpCallback=ye.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Dt,"$1"+r):!1!==e.jsonp&&(e.url+=(gt.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ye.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=h[r],h[r]=function(){o=arguments},n.always(function(){h[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,jt.push(r)),o&&ye.isFunction(i)&&i(o[0]),o=i=N}),"script"):N});var Lt,Ht,qt=0,Mt=h.ActiveXObject&&function(){var e;for(e in Lt)Lt[e](N,!0)};function _t(){try{return new h.XMLHttpRequest}catch(e){}}ye.ajaxSettings.xhr=h.ActiveXObject?function(){return!this.isLocal&&_t()||function(){try{return new h.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}()}:_t,Ht=ye.ajaxSettings.xhr(),ye.support.cors=!!Ht&&"withCredentials"in Ht,(Ht=ye.support.ajax=!!Ht)&&ye.ajaxTransport(function(l){var c;if(!l.crossDomain||ye.support.cors)return{send:function(e,a){var s,t,u=l.xhr();if(l.username?u.open(l.type,l.url,l.async,l.username,l.password):u.open(l.type,l.url,l.async),l.xhrFields)for(t in l.xhrFields)u[t]=l.xhrFields[t];l.mimeType&&u.overrideMimeType&&u.overrideMimeType(l.mimeType),l.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest");try{for(t in e)u.setRequestHeader(t,e[t])}catch(e){}u.send(l.hasContent&&l.data||null),c=function(e,t){var n,r,i,o;try{if(c&&(t||4===u.readyState))if(c=N,s&&(u.onreadystatechange=ye.noop,Mt&&delete Lt[s]),t)4!==u.readyState&&u.abort();else{o={},n=u.status,r=u.getAllResponseHeaders(),"string"==typeof u.responseText&&(o.text=u.responseText);try{i=u.statusText}catch(e){i=""}n||!l.isLocal||l.crossDomain?1223===n&&(n=204):n=o.text?200:404}}catch(e){t||a(-1,e)}o&&a(n,i,o,r)},l.async?4===u.readyState?setTimeout(c):(s=++qt,Mt&&(Lt||(Lt={},ye(h).unload(Mt)),Lt[s]=c),u.onreadystatechange=c):c()},abort:function(){c&&c(N,!0)}}});var Ft,Ot,Bt=/^(?:toggle|show|hide)$/,Pt=RegExp("^(?:([+-])=|)("+x+")([a-z%]*)$","i"),Rt=/queueHooks$/,Wt=[function(t,e,n){var r,i,o,a,s,u,l,c,f,p=this,d=t.style,h={},g=[],m=t.nodeType&&Ze(t);for(i in n.queue||(null==(c=ye._queueHooks(t,"fx")).unqueued&&(c.unqueued=0,f=c.empty.fire,c.empty.fire=function(){c.unqueued||f()}),c.unqueued++,p.always(function(){p.always(function(){c.unqueued--,ye.queue(t,"fx").length||c.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(n.overflow=[d.overflow,d.overflowX,d.overflowY],"inline"===ye.css(t,"display")&&"none"===ye.css(t,"float")&&(ye.support.inlineBlockNeedsLayout&&"inline"!==it(t.nodeName)?d.zoom=1:d.display="inline-block")),n.overflow&&(d.overflow="hidden",ye.support.shrinkWrapBlocks||p.always(function(){d.overflow=n.overflow[0],d.overflowX=n.overflow[1],d.overflowY=n.overflow[2]})),e)if(a=e[i],Bt.exec(a)){if(delete e[i],u=u||"toggle"===a,a===(m?"hide":"show"))continue;g.push(i)}if(o=g.length){"hidden"in(s=ye._data(t,"fxshow")||ye._data(t,"fxshow",{}))&&(m=s.hidden),u&&(s.hidden=!m),m?ye(t).show():p.done(function(){ye(t).hide()}),p.done(function(){var e;for(e in ye._removeData(t,"fxshow"),h)ye.style(t,e,h[e])});for(i=0;i<o;i++)r=g[i],l=p.createTween(r,m?s[r]:0),h[r]=s[r]||ye.style(t,r),r in s||(s[r]=l.start,m&&(l.end=l.start,l.start="width"===r||"height"===r?1:0))}}],$t={"*":[function(e,t){var n,r,i=this.createTween(e,t),o=Pt.exec(t),a=i.cur(),s=+a||0,u=1,l=20;if(o){if(n=+o[2],"px"!==(r=o[3]||(ye.cssNumber[e]?"":"px"))&&s)for(s=ye.css(i.elem,e,!0)||n||1;s/=u=u||".5",ye.style(i.elem,e,s+r),u!==(u=i.cur()/a)&&1!==u&&--l;);i.unit=r,i.start=s,i.end=o[1]?s+(o[1]+1)*n:n}return i}]};function It(){return setTimeout(function(){Ft=N}),Ft=ye.now()}function zt(o,e,t){var n,a,s,r,i=0,u=Wt.length,l=ye.Deferred().always(function(){delete c.elem}),c=function(){if(a)return!1;for(var e=Ft||It(),t=Math.max(0,f.startTime+f.duration-e),n=1-(t/f.duration||0),r=0,i=f.tweens.length;r<i;r++)f.tweens[r].run(n);return l.notifyWith(o,[f,n,t]),n<1&&i?t:(l.resolveWith(o,[f]),!1)},f=l.promise({elem:o,props:ye.extend({},e),opts:ye.extend(!0,{specialEasing:{}},t),originalProperties:e,originalOptions:t,startTime:Ft||It(),duration:t.duration,tweens:[],createTween:function(e,t){var n=ye.Tween(o,f.opts,e,t,f.opts.specialEasing[e]||f.opts.easing);return f.tweens.push(n),n},stop:function(e){var t=0,n=e?f.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)f.tweens[t].run(1);return e?l.resolveWith(o,[f,e]):l.rejectWith(o,[f,e]),this}}),p=f.props;for(function(e,t){var n,r,i,o,a;for(i in e)if(r=ye.camelCase(i),o=t[r],n=e[i],ye.isArray(n)&&(o=n[1],n=e[i]=n[0]),i!==r&&(e[r]=n,delete e[i]),(a=ye.cssHooks[r])&&"expand"in a)for(i in n=a.expand(n),delete e[r],n)i in e||(e[i]=n[i],t[i]=o);else t[r]=o}(p,f.opts.specialEasing);i<u;i++)if(n=Wt[i].call(f,o,p,f.opts))return n;return s=f,r=p,ye.each(r,function(e,t){for(var n=($t[e]||[]).concat($t["*"]),r=0,i=n.length;r<i;r++)if(n[r].call(s,e,t))return}),ye.isFunction(f.opts.start)&&f.opts.start.call(o,f),ye.fx.timer(ye.extend(c,{elem:o,anim:f,queue:f.opts.queue})),f.progress(f.opts.progress).done(f.opts.done,f.opts.complete).fail(f.opts.fail).always(f.opts.always)}function Xt(e,t,n,r,i){return new Xt.prototype.init(e,t,n,r,i)}function Ut(e,t){var n,r={height:e},i=0;for(t=t?1:0;i<4;i+=2-t)r["margin"+(n=Ge[i])]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function Vt(e){return ye.isWindow(e)?e:9===e.nodeType&&(e.defaultView||e.parentWindow)}ye.Animation=ye.extend(zt,{tweener:function(e,t){for(var n,r=0,i=(e=ye.isFunction(e)?(t=e,["*"]):e.split(" ")).length;r<i;r++)n=e[r],$t[n]=$t[n]||[],$t[n].unshift(t)},prefilter:function(e,t){t?Wt.unshift(e):Wt.push(e)}}),((ye.Tween=Xt).prototype={constructor:Xt,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(ye.cssNumber[n]?"":"px")},cur:function(){var e=Xt.propHooks[this.prop];return e&&e.get?e.get(this):Xt.propHooks._default.get(this)},run:function(e){var t,n=Xt.propHooks[this.prop];return this.pos=t=this.options.duration?ye.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Xt.propHooks._default.set(this),this}}).init.prototype=Xt.prototype,(Xt.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=ye.css(e.elem,e.prop,""))&&"auto"!==t?t:0:e.elem[e.prop]},set:function(e){ye.fx.step[e.prop]?ye.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[ye.cssProps[e.prop]]||ye.cssHooks[e.prop])?ye.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}}).scrollTop=Xt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ye.each(["toggle","show","hide"],function(e,r){var i=ye.fn[r];ye.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(Ut(r,!0),e,t,n)}}),ye.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Ze).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=ye.isEmptyObject(t),o=ye.speed(e,n,r),a=function(){var e=zt(this,ye.extend({},t),o);a.finish=function(){e.stop(!0)},(i||ye._data(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){function a(e){var t=e.stop;delete e.stop,t(o)}return"string"!=typeof i&&(o=e,e=i,i=N),e&&!1!==i&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=ye.timers,r=ye._data(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&Rt.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||ye.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=ye._data(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=ye.timers,o=n?n.length:0;for(t.finish=!0,ye.queue(this,a,[]),r&&r.cur&&r.cur.finish&&r.cur.finish.call(this),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),ye.each({slideDown:Ut("show"),slideUp:Ut("hide"),slideToggle:Ut("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){ye.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),ye.speed=function(e,t,n){var r=e&&"object"==typeof e?ye.extend({},e):{complete:n||!n&&t||ye.isFunction(e)&&e,duration:e,easing:n&&t||t&&!ye.isFunction(t)&&t};return r.duration=ye.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in ye.fx.speeds?ye.fx.speeds[r.duration]:ye.fx.speeds._default,null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){ye.isFunction(r.old)&&r.old.call(this),r.queue&&ye.dequeue(this,r.queue)},r},ye.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},ye.timers=[],ye.fx=Xt.prototype.init,ye.fx.tick=function(){var e,t=ye.timers,n=0;for(Ft=ye.now();t.length>n;n++)(e=t[n])()||t[n]!==e||t.splice(n--,1);t.length||ye.fx.stop(),Ft=N},ye.fx.timer=function(e){e()&&ye.timers.push(e)&&ye.fx.start()},ye.fx.interval=13,ye.fx.start=function(){Ot=Ot||setInterval(ye.fx.tick,ye.fx.interval)},ye.fx.stop=function(){clearInterval(Ot),Ot=null},ye.fx.speeds={slow:600,fast:200,_default:400},ye.fx.step={},ye.expr&&ye.expr.filters&&(ye.expr.filters.animated=function(t){return ye.grep(ye.timers,function(e){return t===e.elem}).length}),ye.fn.offset=function(t){if(arguments.length)return t===N?this:this.each(function(e){ye.offset.setOffset(this,t,e)});var e,n,r={top:0,left:0},i=this[0],o=i&&i.ownerDocument;return o?(e=o.documentElement,ye.contains(e,i)?(typeof i.getBoundingClientRect!==y&&(r=i.getBoundingClientRect()),n=Vt(o),{top:r.top+(n.pageYOffset||e.scrollTop)-(e.clientTop||0),left:r.left+(n.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}):r):void 0},ye.offset={setOffset:function(e,t,n){var r=ye.css(e,"position");"static"===r&&(e.style.position="relative");var i,o,a=ye(e),s=a.offset(),u=ye.css(e,"top"),l=ye.css(e,"left"),c={},f={};o=("absolute"===r||"fixed"===r)&&-1<ye.inArray("auto",[u,l])?(i=(f=a.position()).top,f.left):(i=parseFloat(u)||0,parseFloat(l)||0),ye.isFunction(t)&&(t=t.call(e,n,s)),null!=t.top&&(c.top=t.top-s.top+i),null!=t.left&&(c.left=t.left-s.left+o),"using"in t?t.using.call(e,c):a.css(c)}},ye.fn.extend({position:function(){if(this[0]){var e,t,n={top:0,left:0},r=this[0];return"fixed"===ye.css(r,"position")?t=r.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),ye.nodeName(e[0],"html")||(n=e.offset()),n.top+=ye.css(e[0],"borderTopWidth",!0),n.left+=ye.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-ye.css(r,"marginTop",!0),left:t.left-n.left-ye.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||g.documentElement;e&&!ye.nodeName(e,"html")&&"static"===ye.css(e,"position");)e=e.offsetParent;return e||g.documentElement})}}),ye.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o=/Y/.test(i);ye.fn[t]=function(e){return ye.access(this,function(e,t,n){var r=Vt(e);return n===N?r?i in r?r[i]:r.document.documentElement[t]:e[t]:(r?r.scrollTo(o?ye(r).scrollLeft():n,o?n:ye(r).scrollTop()):e[t]=n,N)},t,e,arguments.length,null)}}),ye.each({Height:"height",Width:"width"},function(o,a){ye.each({padding:"inner"+o,content:a,"":"outer"+o},function(r,e){ye.fn[e]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return ye.access(this,function(e,t,n){var r;return ye.isWindow(e)?e.document.documentElement["client"+o]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+o],r["scroll"+o],e.body["offset"+o],r["offset"+o],r["client"+o])):n===N?ye.css(e,t,i):ye.style(e,t,n,i)},a,n?e:N,n,null)}})}),h.jQuery=h.$=ye,"function"==typeof define&&define.amd&&define.amd.jQuery&&define("jquery",[],function(){return ye})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
